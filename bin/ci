#!/bin/bash

function assert_run {
  run "$1" || { echo "failed"; exit 101; }
}

function run {
  echo "running: $*" >&2
  eval $*
}

function cleanup {
  convox apps delete hci
}

# trap cleanup EXIT

root="$(cd $(dirname ${0:-})/..; pwd)"

set -ex

# generation 2
cd $root/examples/httpd
convox apps create hci --wait
convox apps | grep hci
convox apps info hci | grep running
release=$(convox build -a hci -d cibuild --id) && [ -n "$release" ]
convox releases -a hci | grep $release
build=$(convox api get /apps/hci/builds | jq -r ".[0].id") && [ -n "$build" ]
convox builds -a hci | grep $build
convox builds info $build -a hci | grep $build
convox builds info $build -a hci | grep cibuild
convox builds logs $build -a hci | grep "docker tag httpd"
convox builds export $build -a hci -f /tmp/build.tgz
releasei=$(convox builds import -a hci -f /tmp/build.tgz --id) && [ -n "$releasei" ]
buildi=$(convox api get /apps/hci/releases/$releasei | jq -r ".build") && [ -n "$buildi" ]
convox builds info $buildi -a hci | grep cibuild
echo "FOO=bar" | convox env set -a hci
convox env -a hci | grep FOO | grep bar
convox env get FOO -a hci | grep bar
convox env unset FOO -a hci
convox env -a hci | grep -v FOO
releasee=$(convox env set FOO=bar -a hci --id) && [ -n "$releasee" ]
convox env get FOO -a hci | grep bar
convox releases -a hci | grep $releasee
convox releases info $releasee -a hci | grep FOO
convox releases manifest $releasee -a hci | grep "image: httpd"
convox releases promote $release -a hci --wait
convox ps -a hci | grep web
exit 0

# generation 1
convox apps create hci-1 -g 1 --wait
convox deploy 
